(defvar revealvol false)
(defvar revealbri false)
(defvar revealtray false)

(defwidget system [] 
  (box
    :class "widget"
    :orientation "h"
    :space-evenly false
    :spacing 5
    :style "padding: 0px 10px;"
    ; (label 
    ;   :tooltip wifi_essid 
    ;   :class "icon" 
    ;   :text wifi_icon)
    (revealslide
      :var revealvol
      :varstr "revealvol"
      (label 
        :tooltip "${volume}%" 
        :class "icon" 
        :text {volumemute == 'false' ? "󰕾" : "󰖁"})
      (scale 
        :class "sysslide"
        :flipped true
        :orientation "h"
        :min 0 
        :max 100
        :tooltip "${volume}%"
        :value volume 
        :onchange "pamixer --set-volume {}"))

    (revealslide 
      :var revealbri
      :varstr "revealbri"
      (label
        :tooltip "${brightness}%"
        :class "icon"
        :text "󰃞")
      (scale
        :class "sysslide"
        :flipped true
        :orientation "h"
        :min 0 
        :max 100
        :tooltip "${brightness}%"
        :value brightness
        :onchange "brightnessctl set {}%"))

    (label 
      :tooltip "${bat0}%"
      :class "baticon ${ EWW_BATTERY.BAT0.status == 'Charging' ? 'charging': bat0 < 16 ? 'dying': '' }"
      :text baticon
      )
    ))

(defwidget stray [] 
  (box
    :orientation "h"
    :space-evenly false
    (button
      :onclick "${EWW_CMD} update revealtray=${!revealtray}"
      (label 
        :class "icon"
        :angle {!revealtray ? 180 : 0}
        :text ""))
    (revealer
      :reveal revealtray
      :transition "slideleft"
      (box
        :class "widget"
        (systray
          :icon-size 20
          :orientation "h")))))

(defwidget revealslide [var varstr]
  (eventbox 
    :onhover "${EWW_CMD} update ${varstr}=true"
    :onhoverlost "${EWW_CMD} update ${varstr}=false"
    (box
      :orientation "h"
      :space-evenly false 
      (children :nth 0)
      (revealer
        :reveal var
        :transition "slideright"
        (children :nth 1)))))

