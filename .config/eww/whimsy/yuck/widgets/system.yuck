(defvar revealvol false)
(defvar revealbri false)
(defvar revealtray false)

(defwidget system [] 
  (button
    :class "widget"
    :onclick {
              !revealoverviewint ? 
              !revealcalint 
              ? "./scripts/hackslide calendarint revealcalint && ${EWW_CMD} update revealcalmode=0"
              : "./scripts/hackslide calendarint revealcalint close &"
              : ""}
    :style "padding: 0px 10px;"
    (box 
      :orientation "h"
      :spacing 5 
      
      (label 
        :tooltip "${volume}%" 
        :class "icon" 
        :text volicon)

      (label
        :tooltip "${brightness}%"
        :class "icon"
        :text "󰃞")

      (label 
        :tooltip "${bat0}%"
        :class "baticon ${ EWW_BATTERY.BAT0.status == 'Charging' ? 'charging': bat0 < 16 ? 'dying': '' }"
        :text baticon))))
    

(defwidget stray [] 
  (box
    :orientation "h"
    :space-evenly false
    (button
      :class "widget transparent thin"
      :onclick "${EWW_CMD} update revealtray=${!revealtray}"
      (label 
        :class "icon"
        :angle {!revealtray ? 180 : 0}
        :text ""))
    (revealer
      :reveal revealtray
      :transition "slideleft"
      (box
        :class "widget"
        (systray
          :icon-size 20
          :orientation "h")))))

(defwidget revealslide [var varstr]
  (eventbox 
    :onhover "${EWW_CMD} update ${varstr}=true"
    :onhoverlost "${EWW_CMD} update ${varstr}=false"
    (box
      :orientation "h"
      :space-evenly false 
      (children :nth 0)
      (revealer
        :reveal var
        :transition "slideright"
        (children :nth 1)))))

(defwidget volslide [?vert]
  (box 
    :class "widget transparent"
    :orientation { vert != "" ? "v" : "h"}
    :space-evenly false 
    (label 
      :visible { vert == ""}
      :tooltip "${volume}%"
      :class "icon"
      :text volicon)
    (scale 
      :class "sysslide${ vert != '' ? 'v' : '' }"
      :orientation { vert != '' ? "v" : "h"}
      :min 0 
      :max 100 
      :hexpand true
      :vexpand true
      :flipped { vert != ""}
      :tooltip "${volume}%"
      :value volume 
      :onchange "pamixer --set-volume {} & ${EWW_CMD} update volume={} &")
    (label 
      :visible { vert != ""}
      :tooltip "${volume}%"
      :class "icon"
      :text volicon)))
    

(defwidget brislide [?vert]
  (box 
    :class "widget transparent"
    :orientation { vert != "" ? "v" : "h"}
    :space-evenly false
    (label 
      :visible { vert == ""}
      :tooltip "${brightness}%"
      :class "icon"
      :text "󰃞")
    (scale 
      :class "sysslide${ vert != '' ? 'v' : '' }"
      :orientation { vert != '' ? "v" : "h"}
      :min 0 
      :max 100 
      :hexpand true
      :vexpand true
      :flipped { vert != ""}
      :tooltip "${brightness}%"
      :value brightness 
      :onchange "brightnessctl set {}% & ${EWW_CMD} update brightness={} &")
    (label 
      :visible { vert != ""}
      :tooltip "${brightness}%"
      :class "icon"
      :text "󰃞")))

(defwidget sysbuttons [] 
  (box 
    :orientation "h"
    :height 50
    (singlesysbutton 
      :icon wifi_icon
      :toggle {wifi_radio == "enabled" ? "nmcli radio wifi off" : "nmcli radio wifi on"}
      :tooltip wifi_essid)

    (singlesysbutton 
      :icon bluetooth_icon
      :toggle "./scripts/bluetooth.sh --toggle"
      :tooltip bluetooth_device)

    (singlesysbutton
      :icon { notifications.dnd ? "󰂛" : "󰂚"}
      :toggle "./scripts/notifManage --toggle"
      :tooltip "Do not disturbed ${ notifications.dnd ? 'on' : 'off' }")
    (singlesysbutton 
      :icon { caffeine ? "" : "󰾪"}
      :toggle {caffeine ? "swaymsg [app_id='.*'] inhibit_idle none && ${EWW_CMD} update caffeine=false" : "swaymsg [app_id='.*'] inhibit_idle open && ${EWW_CMD} update caffeine=true"}
      :tooltip "Caffeine ${ caffeine ? 'on' : 'off' }")))
    

(defwidget singlesysbutton [icon toggle ?tooltip]
  (button 
    :class "widget"
    :onclick toggle
    :tooltip tooltip
    (label 
      :class "icon"
      :text icon)))

(defwidget logoutctl []
  (box 
    :class "widget transparent"
    :orientation "h"
    :halign "end"
    :height 40
    :spacing 5
    :style "padding: 0px 10px;"
    (button 
      :onclick "notify-send -a 'System' 'Sorry, I actually dont want to logout from here'"
      (label 
        :class "icon"
        :text "󰍃"))

    (button 
      :onclick "notify-send -a 'System' 'Sorry, I actually dont want to shutdown from here'"
      (label 
        :class "icon"
        :text "󰐥"))))
    
